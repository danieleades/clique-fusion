on:
  push:
    branches: [main]
  pull_request:

name: Continuous integration

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            rust: nightly
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo test --all-features

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: actions-rs-plus/clippy-check@v2
        with:
          args: --all-features --all-targets

  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-hack
      - run: cargo hack --no-dev-deps --rust-version check --all

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo doc --no-deps

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools-preview
      - uses: taiki-e/install-action@cargo-llvm-cov
      - run: cargo llvm-cov --all-features --doctests --workspace --lcov --output-path lcov.info
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  csharp-linux:
    name: C# Build & Test (Linux)
    needs: [test, format, lint, msrv, docs, cargo-deny, coverage]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: csharp
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install cross
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      # 1. Restore only non-SmokeTest projects
      - run: dotnet restore src/CliqueFusion/CliqueFusion.csproj
      - run: dotnet restore src/CliqueFusion.Tests/CliqueFusion.Tests.csproj

      # 2. Build only the core projects
      - run: dotnet build src/CliqueFusion/CliqueFusion.csproj --no-restore --warnaserror --configuration Release
      - run: dotnet build src/CliqueFusion.Tests/CliqueFusion.Tests.csproj --no-restore --warnaserror --configuration Release

      # 3. Pack the main library
      - run: dotnet pack src/CliqueFusion --output ./nupkgs --no-build --configuration Release

      # 4. Full restore (now that the .nupkg exists and is in NuGet.config)
      - run: dotnet restore

      # 5. Now it's safe to format, as restore will succeed
      - run: dotnet format --verify-no-changes --verbosity diagnostic

      # 6. Tests and smoke test
      - run: dotnet test --no-restore --configuration Release
      - run: dotnet run --project src/CliqueFusion.SmokeTest --no-restore --configuration Release

      - uses: actions/upload-artifact@v4
        with:
          name: packed-nupkg
          path: csharp/nupkgs

  csharp-windows:
    name: C# Smoke Test (Windows)
    needs: csharp-linux
    runs-on: windows-latest
    defaults:
      run:
        working-directory: csharp
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      - uses: actions/download-artifact@v4
        with:
          name: packed-nupkg
          path: csharp/nupkgs
      - run: dotnet run --project src/CliqueFusion.SmokeTest --configuration Release

  dependabot:
    needs:
      [
        test,
        format,
        lint,
        msrv,
        docs,
        cargo-deny,
        coverage,
        csharp-linux,
        csharp-windows,
      ]
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
